[project]
name = "wmata-rail-position"
version = "1.1.0"
requires-python = ">=3.12"
authors = [{ name = "Michael Young", email = "michael.l.young@gmail.com" }]
maintainers = [{ name = "Michael Young", email = "michael.l.young@gmail.com" }]
dependencies = [
    "ecs-logging>=2.2.0",
    "elastic-apm>=6.23.0",
    "elasticsearch>=8.17.0",
    "gtfs-realtime-bindings>=1.0.0",
    "psutil>=6.0.0",
    "requests>=2.32.3",
]

description = "This project is an example python program that demonstrates how to query the WMATA api and ingest that data to Elasticsearch."
license = { file = "LICENSE" }
readme = "README.md"

keywords = ["python", "wmata", "elasticsearch", "logging", "apm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://github.com/jaraxal/python-apm-demo"
repository = "https://github.com/jaraxal/python-apm-demo"

[project.optional-dependencies]
dev = ["pytest>=8.3.4", "mypy>=1.13.0", "isort>=5.13.2"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 150
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

#[build-system]
#requires = ["setuptools>=61.0"]
#build-backend = "setuptools.build_meta"
